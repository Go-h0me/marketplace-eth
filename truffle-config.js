const HDWalletProvider = require("@truffle/hdwallet-provider");
const keys = require("./keys.json");

module.exports = {
  contracts_build_directory: "./public/contracts",
  networks: {
    development: {
      host: "127.0.0.1", // Localhost (default: none)
      port: 7545, // Standard Ethereum port (default: none)
      network_id: "*", // Any network (default: none)
    },
    ropsten: {
      // must be a thunk, otherwise truffle commands may hang in CI
      provider: () =>
        new HDWalletProvider({
          mnemonic: {
            phrase: keys.MNEMONIC,
          },
          providerOrUrl: `https://ropsten.infura.io/v3/${keys.INFURA_PROJECT_ID}`,
          // numberOfAddresses: 1,
          // shareNonce: true,
          // derivationPath: "m/44'/1'/0'/0/",
          addressIndex: 0,
        }),
      network_id: 3,
      gas: 5500000, //Gas Limit , How much gas we are willing to spent
      gasPrice: 20000000000, //how much we are willing to spent for unit of gas
      confirmations: 2, //number of blocks to wait between deployment
      timeoutBlocks: 200, // number of block before deployment times out
    },
  },

  compilers: {
    solc: {
      version: "0.8.4",
    },
  },
};
// truffle console --network ropsten   1
//  const instance = await CourseMarketplace.deployed() 2
//  instance 3

//  accounts 4
//  instance.transferOwnership("0xD3F33485636d0268fb6542AE1098C391D23738A4",{from:"from:accounts[0]"}) 5

//  const accounts = await web3.eth.getAccounts()
//  accounts
//  await web3.eth.getBalance(accounts[0])

//  config test ropsten
// 5500000 * 20000000000 = 110000000000000000 = 0.11 ETH => 216.32 US Dolla

//  TEST MIGRATE
// /truffle migrate --network ropsten

// transaction hash:    0x8d90ec5f54e2f4a05f42ae9b0121cc8d34081cdff3aa2c906e8d4881bb454f9c
//  contract address:    0x319206Ae3aa493672976447Ed5B054fa2c6E462d
// 0.00000002  * 1494808 =0.02989616 transaction Free
//  gas PRice + usage by Txn

/// 0x60806040526000600360146101000a81548160ff02191690831515021790555034801561002b57600080fd5b5061003b3361004060201b60201c565b610084565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6119e0806100936000396000f3fe6080604052600436106100ec5760003560e01c80636d11290b1161008a578063c4bc5da511610059578063c4bc5da5146102b8578063d76821cb146102cf578063db2e21bc146102eb578063f2fde38b14610302576100f3565b80636d11290b14610210578063935d7e6d1461024d57806396cfda06146102765780639cb8a26a146102a1576100f3565b80633f683b6a116100c65780633f683b6a14610161578063442890d51461018c5780636136e1eb146101b757806362e4e6ac146101d3576100f3565b806312253a6c146100f85780632e1a7d4d1461010f5780633926257214610138576100f3565b366100f357005b600080fd5b34801561010457600080fd5b5061010d61032b565b005b34801561011b57600080fd5b506101366004803603810190610131919061149c565b6103b4565b005b34801561014457600080fd5b5061015f600480360381019061015a9190611473565b6104f2565b005b34801561016d57600080fd5b506101766106df565b6040516101839190611698565b60405180910390f35b34801561019857600080fd5b506101a16106f2565b6040516101ae919061167d565b60405180910390f35b6101d160048036038101906101cc9190611473565b61071c565b005b3480156101df57600080fd5b506101fa60048036038101906101f59190611473565b6108e4565b604051610207919061170e565b60405180910390f35b34801561021c57600080fd5b506102376004803603810190610232919061149c565b610a0b565b60405161024491906116b3565b60405180910390f35b34801561025957600080fd5b50610274600480360381019061026f9190611473565b610a28565b005b34801561028257600080fd5b5061028b610cf4565b6040516102989190611729565b60405180910390f35b3480156102ad57600080fd5b506102b6610cfe565b005b3480156102c457600080fd5b506102cd610dbe565b005b6102e960048036038101906102e49190611437565b610e47565b005b3480156102f757600080fd5b5061030061104d565b005b34801561030e57600080fd5b506103296004803603810190610324919061140e565b6111a3565b005b6103336106f2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610397576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600360146101000a81548160ff021916908315150217905550565b6103bc6106f2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610420576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161046890611668565b60006040518083038185875af1925050503d80600081146104a5576040519150601f19603f3d011682016040523d82523d6000602084013e6104aa565b606091505b50509050806104ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e5906116ee565b60405180910390fd5b5050565b600360149054906101000a900460ff161561050c57600080fd5b6105146106f2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610578576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105818161121b565b6105b7576040517f4db0c48300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000838152602001908152602001600020905060006002811115610607577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160030160149054906101000a900460ff166002811115610651577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610688576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160030160146101000a81548160ff021916908360028111156106d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505050565b600360149054906101000a900460ff1681565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360149054906101000a900460ff161561073657600080fd5b61073f8161121b565b610775576040517f4db0c48300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61077e81611289565b6107b4576040517fcce31cc400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008381526020019081526020016000209050600280811115610803577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160030160149054906101000a900460ff16600281111561084d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610884576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160030160146101000a81548160ff021916908360028111156108d2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055503481600101819055505050565b6108ec61133a565b6000808381526020019081526020016000206040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff1660028111156109c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610a00577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815250509050919050565b600060016000838152602001908152602001600020549050919050565b600360149054906101000a900460ff1615610a4257600080fd5b610a4a6106f2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610aae576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ab78161121b565b610aed576040517f4db0c48300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000838152602001908152602001600020905060006002811115610b3d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160030160149054906101000a900460ff166002811115610b87577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610bbe576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260010154604051610c0c90611668565b60006040518083038185875af1925050503d8060008114610c49576040519150601f19603f3d011682016040523d82523d6000602084013e610c4e565b606091505b5050905080610c92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c89906116ce565b60405180910390fd5b60028260030160146101000a81548160ff02191690836002811115610ce0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060008260010181905550505050565b6000600254905090565b600360149054906101000a900460ff16610d1757600080fd5b610d1f6106f2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d83576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b610dc66106f2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e2a576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360146101000a81548160ff021916908315150217905550565b600360149054906101000a900460ff1615610e6157600080fd5b60008233604051602001610e7692919061163c565b604051602081830303815290604052805190602001209050610e9781611289565b15610ece576040517fb0fc2d9700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060026000815480929190610ee390611803565b9190505590508160016000838152602001908152602001600020819055506040518060a001604052808281526020013481526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200160006002811115610f74577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525060008084815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff0219169083600281111561103f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555090505050505050565b600360149054906101000a900460ff1661106657600080fd5b61106e6106f2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110d2576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161111a90611668565b60006040518083038185875af1925050503d8060008114611157576040519150601f19603f3d011682016040523d82523d6000602084013e61115c565b606091505b50509050806111a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611197906116ee565b60405180910390fd5b50565b6111ab6106f2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461120f576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611218816112f6565b50565b60008073ffffffffffffffffffffffffffffffffffffffff1660008084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60003373ffffffffffffffffffffffffffffffffffffffff1660008084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16149050919050565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040518060a00160405280600081526020016000815260200160008019168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600060028111156113b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525090565b6000813590506113c98161194e565b92915050565b6000813590506113de81611965565b92915050565b6000813590506113f38161197c565b92915050565b60008135905061140881611993565b92915050565b60006020828403121561142057600080fd5b600061142e848285016113ba565b91505092915050565b6000806040838503121561144a57600080fd5b6000611458858286016113cf565b9250506020611469858286016113e4565b9150509250929050565b60006020828403121561148557600080fd5b6000611493848285016113e4565b91505092915050565b6000602082840312156114ae57600080fd5b60006114bc848285016113f9565b91505092915050565b6114ce81611760565b82525050565b6114dd81611760565b82525050565b6114f46114ef82611760565b61184c565b82525050565b61150381611772565b82525050565b61151a6115158261177e565b61185e565b82525050565b611529816117aa565b82525050565b611538816117aa565b82525050565b611547816117f1565b82525050565b600061155a60108361174f565b9150611565826118e5565b602082019050919050565b600061157d600083611744565b91506115888261190e565b600082019050919050565b60006115a060108361174f565b91506115ab82611911565b602082019050919050565b60a0820160008201516115cc600085018261161e565b5060208201516115df602085018261161e565b5060408201516115f26040850182611520565b50606082015161160560608501826114c5565b506080820151611618608085018261153e565b50505050565b611627816117e7565b82525050565b611636816117e7565b82525050565b60006116488285611509565b60108201915061165882846114e3565b6014820191508190509392505050565b600061167382611570565b9150819050919050565b600060208201905061169260008301846114d4565b92915050565b60006020820190506116ad60008301846114fa565b92915050565b60006020820190506116c8600083018461152f565b92915050565b600060208201905081810360008301526116e78161154d565b9050919050565b6000602082019050818103600083015261170781611593565b9050919050565b600060a08201905061172360008301846115b6565b92915050565b600060208201905061173e600083018461162d565b92915050565b600081905092915050565b600082825260208201905092915050565b600061176b826117c7565b9050919050565b60008115159050919050565b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b6000819050919050565b60008190506117c28261193a565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006117fc826117b4565b9050919050565b600061180e826117e7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156118415761184061187a565b5b600182019050919050565b600061185782611868565b9050919050565b6000819050919050565b6000611873826118d8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008160601b9050919050565b7f5472616e73666572206661696c65642100000000000000000000000000000000600082015250565b50565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b6003811061194b5761194a6118a9565b5b50565b61195781611760565b811461196257600080fd5b50565b61196e8161177e565b811461197957600080fd5b50565b611985816117aa565b811461199057600080fd5b50565b61199c816117e7565b81146119a757600080fd5b5056fea2646970667358221220976252364d269ef2d704bcba9af35cd269d93dbda290be9df98c5e73c416176c64736f6c63430008040033

// NEXT_PUBLIC_TARGET_CHAIN_ID=1337
// NEXT_PUBLIC_NETWORK_ID=5777

//  const instance = await CourseMarketplace.deployed()
//  instance
// accounts

// instance.transferOwnership("0xD3F33485636d0268fb6542AE1098C391D23738A4",{from:accounts[0]}) //admin

//  truffle migrate --network ropsten
//  const accounts = await web3.eth.getAccounts()
//  await web3.eth.getBalance(accounts[0])


// truffle migrate --reset --network ropsten


// transaction hash:    0xaf1309acafae51c74a2a66cbf7a47422369ef280419ef2fe08a65f7c05147e6d
//    > contract address:    0x53c569c28Bfa7958c65B25172c85Fe21f717fC72


// BASE FEE (determnd by ethereum ) =>  13.247874626 

// Max Priority Fee Per Gas (tip) => 1 wei

//  GAs PRICE  = BASE FEE + TIP = > 


//  BURNT FEE => BASE FEE * GAS USED =>  13.247874626  * 21000


// REST To MINER  - > TIP * GAS USED = 1 * 21000



// TRANSFER OWNERSHIP *****
//  truffle console --network ropsten
//   const i = await CourseMarketplace.deployed()
//  i

// i.transferOwnership("0xD3F33485636d0268fb6542AE1098C391D23738A4",{from:accounts[0]})

//  await i.getContractOwner()

/**
 * Use this file to configure your truffle project. It's seeded with some
 * common settings for different networks and features like migrations,
 * compilation and testing. Uncomment the ones you need or modify
 * them to suit your project as necessary.
 *
 * More information about configuration can be found at:
 *
 * trufflesuite.com/docs/advanced/configuration
 *
 * To deploy via Infura you'll need a wallet provider (like @truffle/hdwallet-provider)
 * to sign your transactions before they're sent to a remote public node. Infura accounts
 * are available for free at: infura.io/register.
 *
 * You'll also need a mnemonic - the twelve word phrase the wallet uses to generate
 * public/private key pairs. If you're publishing your code to GitHub make sure you load this
 * phrase from a file you've .gitignored so it doesn't accidentally become public.
 *
 */

// const HDWalletProvider = require('@truffle/hdwallet-provider');
// const infuraKey = "fj4jll3k.....";
//
// const fs = require('fs');
// const mnemonic = fs.readFileSync(".secret").toString().trim();

// module.exports = {
/**
 * Networks define how you connect to your ethereum client and let you set the
 * defaults web3 uses to send transactions. If you don't specify one truffle
 * will spin up a development blockchain for you on port 9545 when you
 * run `develop` or `test`. You can ask a truffle command to use a specific
 * network from the command line, e.g
 *
 * $ truffle test --network <network-name>
 */

// networks: {
// Useful for testing. The `development` name is special - truffle uses it by default
// if it's defined here and no other network is specified at the command line.
// You should run a client (like ganache-cli, geth or parity) in a separate terminal
// tab if you use this network and you must also set the `host`, `port` and `network_id`
// options below to some value.
//
// development: {
//  host: "127.0.0.1",     // Localhost (default: none)
//  port: 8545,            // Standard Ethereum port (default: none)
//  network_id: "*",       // Any network (default: none)
// },
// Another network with more advanced options...
// advanced: {
// port: 8777,             // Custom port
// network_id: 1342,       // Custom network
// gas: 8500000,           // Gas sent with each transaction (default: ~6700000)
// gasPrice: 20000000000,  // 20 gwei (in wei) (default: 100 gwei)
// from: <address>,        // Account to send txs from (default: accounts[0])
// websocket: true        // Enable EventEmitter interface for web3 (default: false)
// },
// Useful for deploying to a public network.
// NB: It's important to wrap the provider as a function.
// ropsten: {
// provider: () => new HDWalletProvider(mnemonic, `https://ropsten.infura.io/v3/YOUR-PROJECT-ID`),
// network_id: 3,       // Ropsten's id
// gas: 5500000,        // Ropsten has a lower block limit than mainnet
// confirmations: 2,    // # of confs to wait between deployments. (default: 0)
// timeoutBlocks: 200,  // # of blocks before a deployment times out  (minimum/default: 50)
// skipDryRun: true     // Skip dry run before migrations? (default: false for public nets )
// },
// Useful for private networks
// private: {
// provider: () => new HDWalletProvider(mnemonic, `https://network.io`),
// network_id: 2111,   // This network is yours, in the cloud.
// production: true    // Treats this network as if it was a public net. (default: false)
// }
// },

// Set default mocha options here, use special reporters etc.
// mocha: {
// timeout: 100000
// },

// Configure your compilers
// compilers: {
//   solc: {
// version: "0.5.1",    // Fetch exact version from solc-bin (default: truffle's version)
// docker: true,        // Use "0.5.1" you've installed locally with docker (default: false)
// settings: {          // See the solidity docs for advice about optimization and evmVersion
//  optimizer: {
//    enabled: false,
//    runs: 200
//  },
//  evmVersion: "byzantium"
// }
//   }
// },

// Truffle DB is currently disabled by default; to enable it, change enabled: false to enabled: true
//
// Note: if you migrated your contracts prior to enabling this field in your Truffle project and want
// those previously migrated contracts available in the .db directory, you will need to run the following:
// $ truffle migrate --reset --compile-all

//   db: {
//     enabled: false
//   }
// };
